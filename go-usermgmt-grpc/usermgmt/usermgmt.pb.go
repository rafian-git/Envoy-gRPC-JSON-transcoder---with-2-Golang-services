// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usermgmt.proto

/*
Package usermgmt is a generated protocol buffer package.

It is generated from these files:
	usermgmt.proto

It has these top-level messages:
	LoginReq
	LoginRes
	NewUser
	User
*/
package usermgmt

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginReq struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LoginReq) Reset()                    { *m = LoginReq{} }
func (m *LoginReq) String() string            { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()               {}
func (*LoginReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginRes struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *LoginRes) Reset()                    { *m = LoginRes{} }
func (m *LoginRes) String() string            { return proto.CompactTextString(m) }
func (*LoginRes) ProtoMessage()               {}
func (*LoginRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoginRes) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type NewUser struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Age      int32  `protobuf:"varint,3,opt,name=age" json:"age,omitempty"`
}

func (m *NewUser) Reset()                    { *m = NewUser{} }
func (m *NewUser) String() string            { return proto.CompactTextString(m) }
func (*NewUser) ProtoMessage()               {}
func (*NewUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *NewUser) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *NewUser) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *NewUser) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

type User struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Age      int32  `protobuf:"varint,3,opt,name=age" json:"age,omitempty"`
	Id       int32  `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*LoginReq)(nil), "usermgmt.LoginReq")
	proto.RegisterType((*LoginRes)(nil), "usermgmt.LoginRes")
	proto.RegisterType((*NewUser)(nil), "usermgmt.NewUser")
	proto.RegisterType((*User)(nil), "usermgmt.User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserManagement service

type UserManagementClient interface {
	CreateNewUser(ctx context.Context, in *NewUser, opts ...grpc.CallOption) (*User, error)
	UserLogin(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRes, error)
}

type userManagementClient struct {
	cc *grpc.ClientConn
}

func NewUserManagementClient(cc *grpc.ClientConn) UserManagementClient {
	return &userManagementClient{cc}
}

func (c *userManagementClient) CreateNewUser(ctx context.Context, in *NewUser, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/usermgmt.UserManagement/CreateNewUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementClient) UserLogin(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRes, error) {
	out := new(LoginRes)
	err := grpc.Invoke(ctx, "/usermgmt.UserManagement/UserLogin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserManagement service

type UserManagementServer interface {
	CreateNewUser(context.Context, *NewUser) (*User, error)
	UserLogin(context.Context, *LoginReq) (*LoginRes, error)
}

func RegisterUserManagementServer(s *grpc.Server, srv UserManagementServer) {
	s.RegisterService(&_UserManagement_serviceDesc, srv)
}

func _UserManagement_CreateNewUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementServer).CreateNewUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgmt.UserManagement/CreateNewUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementServer).CreateNewUser(ctx, req.(*NewUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagement_UserLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementServer).UserLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usermgmt.UserManagement/UserLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementServer).UserLogin(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserManagement_serviceDesc = grpc.ServiceDesc{
	ServiceName: "usermgmt.UserManagement",
	HandlerType: (*UserManagementServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNewUser",
			Handler:    _UserManagement_CreateNewUser_Handler,
		},
		{
			MethodName: "UserLogin",
			Handler:    _UserManagement_UserLogin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "usermgmt.proto",
}

func init() { proto.RegisterFile("usermgmt.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0xbd, 0x4e, 0xc3, 0x30,
	0x14, 0x85, 0xe5, 0xb4, 0x85, 0xf6, 0x22, 0xa2, 0x62, 0x21, 0x14, 0x45, 0x42, 0x54, 0x1e, 0x50,
	0xd5, 0xa1, 0x91, 0x60, 0x2b, 0x5b, 0x61, 0xe3, 0x67, 0x08, 0x62, 0x61, 0xc2, 0x90, 0x2b, 0x2b,
	0x22, 0xb6, 0x43, 0x6c, 0x54, 0x66, 0x5e, 0x81, 0x47, 0xe0, 0x91, 0x78, 0x05, 0x1e, 0x04, 0xd9,
	0xa9, 0xd3, 0x81, 0x0d, 0xb1, 0x9d, 0xf3, 0xdd, 0xdc, 0x73, 0x15, 0x1f, 0x88, 0x5f, 0x0d, 0x36,
	0x52, 0x48, 0x3b, 0xaf, 0x1b, 0x6d, 0x35, 0x1d, 0x06, 0x9f, 0x1e, 0x0b, 0xad, 0x45, 0x85, 0xbc,
	0x2e, 0xb3, 0x56, 0x65, 0x4e, 0x72, 0xa5, 0xb4, 0xe5, 0xb6, 0xd4, 0xca, 0xb4, 0x1b, 0x6c, 0x09,
	0xc3, 0x2b, 0x2d, 0x4a, 0x95, 0xe3, 0x0b, 0x4d, 0xc1, 0xef, 0x2b, 0x2e, 0x31, 0x21, 0x13, 0x32,
	0x1d, 0xe5, 0x9d, 0x77, 0xb3, 0x9a, 0x1b, 0xb3, 0xd2, 0x4d, 0x91, 0x44, 0xed, 0x2c, 0x78, 0x36,
	0xe9, 0x32, 0x0c, 0xdd, 0x87, 0x81, 0xd5, 0xcf, 0xa8, 0xd6, 0x01, 0xad, 0x61, 0xb7, 0xb0, 0x7d,
	0x83, 0xab, 0x3b, 0x83, 0xcd, 0x5f, 0x8f, 0xd0, 0x31, 0xf4, 0xb8, 0xc0, 0xa4, 0x37, 0x21, 0xd3,
	0x41, 0xee, 0x24, 0x7b, 0x80, 0xfe, 0xff, 0x26, 0xd2, 0x18, 0xa2, 0xb2, 0x48, 0xfa, 0x1e, 0x44,
	0x65, 0x71, 0xf2, 0x49, 0x20, 0x76, 0x27, 0xae, 0xb9, 0xe2, 0x02, 0x25, 0x2a, 0x4b, 0x2f, 0x60,
	0xf7, 0xbc, 0x41, 0x6e, 0x31, 0xfc, 0xcf, 0xde, 0xbc, 0xeb, 0x60, 0x8d, 0xd2, 0x78, 0x83, 0x9c,
	0x67, 0xe3, 0xf7, 0xaf, 0xef, 0x8f, 0x08, 0xd8, 0x20, 0x73, 0x7c, 0x41, 0x66, 0xf4, 0x12, 0x46,
	0x6e, 0xe2, 0x5f, 0x8d, 0xd2, 0xcd, 0xe7, 0xa1, 0x8a, 0xf4, 0x37, 0x33, 0xec, 0xc0, 0xc7, 0x8c,
	0xd9, 0x8e, 0x8f, 0xc9, 0x2a, 0xc7, 0x17, 0x64, 0xb6, 0x3c, 0xba, 0x3f, 0xc4, 0x37, 0x2e, 0xeb,
	0x0a, 0xe7, 0x4f, 0x5a, 0x66, 0x61, 0xf1, 0x2c, 0x88, 0xc7, 0x2d, 0x5f, 0xf5, 0xe9, 0x4f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x14, 0xc2, 0xb7, 0xfe, 0x2e, 0x02, 0x00, 0x00,
}
